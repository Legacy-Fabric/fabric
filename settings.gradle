pluginManagement {
	repositories {
		gradlePluginPortal()
		maven {
			name = 'Fabric'
			url = 'https://maven.fabricmc.net/'
		}
		mavenLocal()
 		maven {
			name = 'Jitpack'
			url = 'https://jitpack.io'
		}
	}
	resolutionStrategy {
		eachPlugin {
			if (requested.id.id == "fabric-loom" && !requested.version?.endsWith("-SNAPSHOT")) {
				useModule("com.github.Chocohead.Fabric-Loom:fabric-loom:${requested.version}")
			}
		}
	}
}

rootProject.name = "legacy-rewoven-api"

def addModule(String dir, String name) {
	include(dir)
	project(":$dir").projectDir = new File("${rootDir.path}/modules/$dir")
	project(":$dir").name = name
}

def addModule(String dir, String subdir, String name) {
	include(dir)
	project(":$dir").projectDir = new File("${rootDir.path}/modules/$dir/$subdir")
	project(":$dir").name = name
}

addModule("base", "legacy-rewoven-api-base")
addModule("resources", "legacy-rewoven-resource-loader-v1")
addModule("client", "rendering", "legacy-rewoven-rendering-api-v1")
addModule("client", "keybindings", "legacy-rewoven-keybinding-api-v1")
addModule("networking", "legacy-rewoven-networking-api-v1")
addModule("crash-report-info", "legacy-rewoven-crash-report-info-v1")
addModule("lifecycle-events", "legacy-rewoven-lifecycle-events-v1")
addModule("entity-events", "legacy-rewoven-entity-events-v1")
addModule("server", "vanilla-commands", "legacy-rewoven-vanilla-command-api-v1")
addModule("server", "sponge-commands", "legacy-rewoven-sponge-command-api-v2")
addModule("server", "permissions", "legacy-rewoven-permissions-api-v1")
addModule("server", "gamerules", "legacy-rewoven-gamerule-api-v1")

include("testmods")
