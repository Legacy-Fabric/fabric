pluginManagement {
	repositories {
		maven {
			name = "Fabric"
			url = "https://maven.fabricmc.net/"
		}
		maven {
			name = "legacy-fabric"
			url = "https://maven.legacyfabric.net/"
		}
		gradlePluginPortal()
		mavenLocal()
	}
}

rootProject.name = "legacy-fabric-api"

def loadProject(String path) {
	file(path).listFiles().each {
		if (it.isDirectory() && (
			file("$it/src/main/resources/fabric.mod.json").exists() ||
			file("$it/src/testmod/resources/fabric.mod.json").exists()
		)) {
			include("${path}_$it.name")

			project(":${path}_$it.name").projectDir = it
		}
	}
}

loadProject("legacy-fabric-api-base")
loadProject("legacy-fabric-logger-api-v1")
loadProject("legacy-fabric-resource-loader-v1")
loadProject("legacy-fabric-lifecycle-events-v1")
loadProject("legacy-fabric-command-api-v1")
loadProject("legacy-fabric-entity-events-v1")
loadProject("legacy-fabric-gamerule-api-v1")
loadProject("legacy-fabric-item-groups-v1")
loadProject("legacy-fabric-keybindings-api-v1")
loadProject("legacy-fabric-networking-api-v1")
loadProject("legacy-fabric-permissions-api-v1")
loadProject("legacy-fabric-registry-sync-api-v1")
loadProject("legacy-fabric-rendering-api-v1")
loadProject("legacy-fabric-crash-report-info-v1")
loadProject("legacy-fabric-command-api-v2")

loadProject("legacyfabric-api")
